# Definition for a  binary tree node
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
#
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    # @param head, a list node
    # @return a tree node
    def sortedListToBST(self, head):
        num=[]
        while head!=None:
            num.append(head.val)
            head=head.next
        
        return self.helper(num)
    
    def helper(self,num):
        n=len(num)
        
        if n==0:return None
        
        root=TreeNode(num[n/2])
        root.left=self.helper(num[:n/2])
        root.right=self.helper(num[n/2+1:])
        return root
        
