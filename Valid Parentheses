class Solution:
    # @return a boolean
    def isValid(self, s):
        n=len(s)
        if n==0:
            return True
        
        stack=[]
        
        for i in range(n):
            if s[i]=='(' or s[i]=='[' or s[i]=='{':
                stack.append(s[i])
            else:
                if len(stack)!=0 and self.helper(stack[-1],s[i]):
                    stack.pop()
                else:
                    return False
        
        return not stack
        
    def helper(self,left,right):
        if (left=='(' and right==')') or (left=='[' and right==']') or (left=='{' and right=='}'):return True
        else:return False
            
method 2:

class Solution(object):
    def isValid(self, s):
        """
        :type s: str
        :rtype: bool
        """
        if len(s)%2 != 0:
            return False
        
        p_dict = {'(':')', '[':']', '{':'}'}
        stack = []
        
        for i in s:
            if i in p_dict.keys():
                stack.append(i)
            else:
                if stack == [] or i != p_dict[stack.pop()]:
                    return False
        
        return stack == []
            
        
        
